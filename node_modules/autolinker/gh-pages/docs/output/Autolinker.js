Ext.data.JsonP.Autolinker({"tagname":"class","name":"Autolinker","autodetected":{},"files":[{"filename":"Autolinker.js","href":"Autolinker.html#Autolinker"}],"extends":null,"members":[{"name":"className","tagname":"cfg","owner":"Autolinker","id":"cfg-className","meta":{}},{"name":"email","tagname":"cfg","owner":"Autolinker","id":"cfg-email","meta":{}},{"name":"hashtag","tagname":"cfg","owner":"Autolinker","id":"cfg-hashtag","meta":{}},{"name":"newWindow","tagname":"cfg","owner":"Autolinker","id":"cfg-newWindow","meta":{}},{"name":"phone","tagname":"cfg","owner":"Autolinker","id":"cfg-phone","meta":{}},{"name":"replaceFn","tagname":"cfg","owner":"Autolinker","id":"cfg-replaceFn","meta":{}},{"name":"stripPrefix","tagname":"cfg","owner":"Autolinker","id":"cfg-stripPrefix","meta":{}},{"name":"truncate","tagname":"cfg","owner":"Autolinker","id":"cfg-truncate","meta":{}},{"name":"twitter","tagname":"cfg","owner":"Autolinker","id":"cfg-twitter","meta":{}},{"name":"urls","tagname":"cfg","owner":"Autolinker","id":"cfg-urls","meta":{}},{"name":"htmlParser","tagname":"property","owner":"Autolinker","id":"property-htmlParser","meta":{"private":true}},{"name":"matchParser","tagname":"property","owner":"Autolinker","id":"property-matchParser","meta":{"private":true}},{"name":"tagBuilder","tagname":"property","owner":"Autolinker","id":"property-tagBuilder","meta":{"private":true}},{"name":"constructor","tagname":"method","owner":"Autolinker","id":"method-constructor","meta":{}},{"name":"createMatchReturnVal","tagname":"method","owner":"Autolinker","id":"method-createMatchReturnVal","meta":{"private":true}},{"name":"getHtmlParser","tagname":"method","owner":"Autolinker","id":"method-getHtmlParser","meta":{"protected":true}},{"name":"getMatchParser","tagname":"method","owner":"Autolinker","id":"method-getMatchParser","meta":{"protected":true}},{"name":"getTagBuilder","tagname":"method","owner":"Autolinker","id":"method-getTagBuilder","meta":{}},{"name":"link","tagname":"method","owner":"Autolinker","id":"method-link","meta":{}},{"name":"linkifyStr","tagname":"method","owner":"Autolinker","id":"method-linkifyStr","meta":{"private":true}},{"name":"link","tagname":"method","owner":"Autolinker","id":"static-method-link","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Autolinker","short_doc":"Utility class used to process a given string of text, and wrap the matches in\nthe appropriate anchor (&lt;a&gt;) tags...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Autolinker.html#Autolinker' target='_blank'>Autolinker.js</a></div></pre><div class='doc-contents'><p>Utility class used to process a given string of text, and wrap the matches in\nthe appropriate anchor (&lt;a&gt;) tags to turn them into links.</p>\n\n<p>Any of the configuration options may be provided in an Object (map) provided\nto the Autolinker constructor, which will configure how the <a href=\"#!/api/Autolinker-method-link\" rel=\"Autolinker-method-link\" class=\"docClass\">link()</a>\nmethod will process the links.</p>\n\n<p>For example:</p>\n\n<pre><code>var autolinker = new Autolinker( {\n    newWindow : false,\n    truncate  : 30\n} );\n\nvar html = autolinker.link( \"Joe went to www.yahoo.com\" );\n// produces: 'Joe went to &lt;a href=\"http://www.yahoo.com\"&gt;yahoo.com&lt;/a&gt;'\n</code></pre>\n\n<p>The <a href=\"#!/api/Autolinker-static-method-link\" rel=\"Autolinker-static-method-link\" class=\"docClass\">static link()</a> method may also be used to inline options into a single call, which may\nbe more convenient for one-off uses. For example:</p>\n\n<pre><code>var html = <a href=\"#!/api/Autolinker-method-link\" rel=\"Autolinker-method-link\" class=\"docClass\">Autolinker.link</a>( \"Joe went to www.yahoo.com\", {\n    newWindow : false,\n    truncate  : 30\n} );\n// produces: 'Joe went to &lt;a href=\"http://www.yahoo.com\"&gt;yahoo.com&lt;/a&gt;'\n</code></pre>\n\n<h2>Custom Replacements of Links</h2>\n\n<p>If the configuration options do not provide enough flexibility, a <a href=\"#!/api/Autolinker-cfg-replaceFn\" rel=\"Autolinker-cfg-replaceFn\" class=\"docClass\">replaceFn</a>\nmay be provided to fully customize the output of Autolinker. This function is\ncalled once for each URL/Email/Phone#/Twitter Handle/Hashtag match that is\nencountered.</p>\n\n<p>For example:</p>\n\n<pre><code>var input = \"...\";  // string with URLs, Email Addresses, Phone #s, Twitter Handles, and Hashtags\n\nvar linkedText = <a href=\"#!/api/Autolinker-method-link\" rel=\"Autolinker-method-link\" class=\"docClass\">Autolinker.link</a>( input, {\n    replaceFn : function( autolinker, match ) {\n        console.log( \"href = \", match.getAnchorHref() );\n        console.log( \"text = \", match.getAnchorText() );\n\n        switch( match.getType() ) {\n            case 'url' :\n                console.log( \"url: \", match.getUrl() );\n\n                if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {\n                    var tag = autolinker.getTagBuilder().build( match );  // returns an `<a href=\"#!/api/Autolinker.HtmlTag\" rel=\"Autolinker.HtmlTag\" class=\"docClass\">Autolinker.HtmlTag</a>` instance, which provides mutator methods for easy changes\n                    tag.setAttr( 'rel', 'nofollow' );\n                    tag.addClass( 'external-link' );\n\n                    return tag;\n\n                } else {\n                    return true;  // let Autolinker perform its normal anchor tag replacement\n                }\n\n            case 'email' :\n                var email = match.getEmail();\n                console.log( \"email: \", email );\n\n                if( email === \"my@own.address\" ) {\n                    return false;  // don't auto-link this particular email address; leave as-is\n                } else {\n                    return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)\n                }\n\n            case 'phone' :\n                var phoneNumber = match.getPhoneNumber();\n                console.log( phoneNumber );\n\n                return '&lt;a href=\"http://newplace.to.link.phone.numbers.to/\"&gt;' + phoneNumber + '&lt;/a&gt;';\n\n            case 'twitter' :\n                var twitterHandle = match.getTwitterHandle();\n                console.log( twitterHandle );\n\n                return '&lt;a href=\"http://newplace.to.link.twitter.handles.to/\"&gt;' + twitterHandle + '&lt;/a&gt;';\n\n            case 'hashtag' :\n                var hashtag = match.getHashtag();\n                console.log( hashtag );\n\n                return '&lt;a href=\"http://newplace.to.link.hashtag.handles.to/\"&gt;' + hashtag + '&lt;/a&gt;';\n        }\n    }\n} );\n</code></pre>\n\n<p>The function may return the following values:</p>\n\n<ul>\n<li><code>true</code> (Boolean): Allow Autolinker to replace the match as it normally would.</li>\n<li><code>false</code> (Boolean): Do not replace the current match at all - leave as-is.</li>\n<li>Any String: If a string is returned from the function, the string will be used directly as the replacement HTML for\nthe match.</li>\n<li>An <a href=\"#!/api/Autolinker.HtmlTag\" rel=\"Autolinker.HtmlTag\" class=\"docClass\">Autolinker.HtmlTag</a> instance, which can be used to build/modify an HTML tag before writing out its HTML text.</li>\n</ul>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-className' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-className' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-className' class='name expandable'>className</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A CSS class name to add to the generated links. ...</div><div class='long'><p>A CSS class name to add to the generated links. This class will be added to all links, as well as this class\nplus match suffixes for styling url/email/phone/twitter/hashtag links differently.</p>\n\n<p>For example, if this config is provided as \"myLink\", then:</p>\n\n<ul>\n<li>URL links will have the CSS classes: \"myLink myLink-url\"</li>\n<li>Email links will have the CSS classes: \"myLink myLink-email\", and</li>\n<li>Twitter links will have the CSS classes: \"myLink myLink-twitter\"</li>\n<li>Phone links will have the CSS classes: \"myLink myLink-phone\"</li>\n<li>Hashtag links will have the CSS classes: \"myLink myLink-hashtag\"</li>\n</ul>\n\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div><div id='cfg-email' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-email' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-email' class='name expandable'>email</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>true if email addresses should be automatically linked, false if they should not be. ...</div><div class='long'><p><code>true</code> if email addresses should be automatically linked, <code>false</code> if they should not be.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-hashtag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-hashtag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-hashtag' class='name expandable'>hashtag</a> : Boolean/String<span class=\"signature\"></span></div><div class='description'><div class='short'>A string for the service name to have hashtags (ex: \"#myHashtag\")\nauto-linked to. ...</div><div class='long'><p>A string for the service name to have hashtags (ex: \"#myHashtag\")\nauto-linked to. The currently-supported values are:</p>\n\n<ul>\n<li>'twitter'</li>\n<li>'facebook'</li>\n<li>'instagram'</li>\n</ul>\n\n\n<p>Pass <code>false</code> to skip auto-linking of hashtags.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-newWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-newWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-newWindow' class='name expandable'>newWindow</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>true if the links should open in a new window, false otherwise. ...</div><div class='long'><p><code>true</code> if the links should open in a new window, <code>false</code> otherwise.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-phone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-phone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-phone' class='name expandable'>phone</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>true if Phone numbers (\"(555)555-5555\") should be automatically linked, false if they should not be. ...</div><div class='long'><p><code>true</code> if Phone numbers (\"(555)555-5555\") should be automatically linked, <code>false</code> if they should not be.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-replaceFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-replaceFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-replaceFn' class='name expandable'>replaceFn</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>A function to individually process each match found in the input string. ...</div><div class='long'><p>A function to individually process each match found in the input string.</p>\n\n<p>See the class's description for usage.</p>\n\n<p>This function is called with the following parameters:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>autolinker</span> : <a href=\"#!/api/Autolinker\" rel=\"Autolinker\" class=\"docClass\">Autolinker</a><div class='sub-desc'><p>The Autolinker instance, which may be used to retrieve child objects from (such\n  as the instance's <a href=\"#!/api/Autolinker-method-getTagBuilder\" rel=\"Autolinker-method-getTagBuilder\" class=\"docClass\">tag builder</a>).</p>\n</div></li><li><span class='pre'>match</span> : <a href=\"#!/api/Autolinker.match.Match\" rel=\"Autolinker.match.Match\" class=\"docClass\">Autolinker.match.Match</a><div class='sub-desc'><p>The Match instance which can be used to retrieve information about the\n  match that the <code>replaceFn</code> is currently processing. See <a href=\"#!/api/Autolinker.match.Match\" rel=\"Autolinker.match.Match\" class=\"docClass\">Autolinker.match.Match</a> subclasses for details.</p>\n</div></li></ul></div></div></div><div id='cfg-stripPrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-stripPrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-stripPrefix' class='name expandable'>stripPrefix</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>true if 'http://' or 'https://' and/or the 'www.' should be stripped\nfrom the beginning of URL links' text, false oth...</div><div class='long'><p><code>true</code> if 'http://' or 'https://' and/or the 'www.' should be stripped\nfrom the beginning of URL links' text, <code>false</code> otherwise.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-truncate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-truncate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-truncate' class='name expandable'>truncate</a> : Number/Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Number Form\n\nA number for how many characters matched text should be truncated to\ninside the text of a link. ...</div><div class='long'><h2>Number Form</h2>\n\n<p>A number for how many characters matched text should be truncated to\ninside the text of a link. If the matched text is over this number of\ncharacters, it will be truncated to this length by adding a two period\nellipsis ('..') to the end of the string.</p>\n\n<p>For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file'\ntruncated to 25 characters might look something like this:\n'yahoo.com/some/long/pat..'</p>\n\n<p>Example Usage:</p>\n\n<pre><code>truncate: 25\n</code></pre>\n\n<h2>Object Form</h2>\n\n<p>An Object may also be provided with two properties: <code>length</code> (Number) and\n<code>location</code> (String). <code>location</code> may be one of the following: 'end'\n(default), 'middle', or 'smart'.</p>\n\n<p>Example Usage:</p>\n\n<pre><code>truncate: { length: 25, location: 'middle' }\n</code></pre>\n<ul><li><span class='pre'>length</span> : Number<div class='sub-desc'><p>How many characters to allow before\n  truncation will occur.</p>\n</div></li><li><span class='pre'>location</span> : \"end\"/\"middle\"/\"smart\" (optional)<div class='sub-desc'><ul>\n<li>'end' (default): will truncate up to the number of characters, and then\nadd an ellipsis at the end. Ex: 'yahoo.com/some/long/pat..'</li>\n<li>'middle': will truncate and add the ellipsis in the middle. Ex:\n'yahoo.com/s..th/to/a/file'</li>\n<li>'smart': for URLs where the algorithm attempts to strip out unnecessary\nparts first (such as the 'www.', then URL scheme, hash, etc.),\nattempting to still make the URL human-readable before trying to find a\ngood point to insert the ellipsis if it is still too long. Ex:\n'yahoo.com/some..to/a/file'. For more details, see\n<a href=\"#!/api/Autolinker.truncate.TruncateSmart\" rel=\"Autolinker.truncate.TruncateSmart\" class=\"docClass\">Autolinker.truncate.TruncateSmart</a>.</li>\n</ul>\n\n<p>Defaults to: <code>&quot;end&quot;</code></p></div></li></ul></div></div></div><div id='cfg-twitter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-twitter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-twitter' class='name expandable'>twitter</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>true if Twitter handles (\"@example\") should be automatically linked, false if they should not be. ...</div><div class='long'><p><code>true</code> if Twitter handles (\"@example\") should be automatically linked, <code>false</code> if they should not be.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-urls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-cfg-urls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-cfg-urls' class='name expandable'>urls</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>true if miscellaneous URLs should be automatically linked, false if they should not be. ...</div><div class='long'><p><code>true</code> if miscellaneous URLs should be automatically linked, <code>false</code> if they should not be.</p>\n<p>Defaults to: <code>true</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-htmlParser' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-property-htmlParser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-property-htmlParser' class='name expandable'>htmlParser</a> : <a href=\"#!/api/Autolinker.htmlParser.HtmlParser\" rel=\"Autolinker.htmlParser.HtmlParser\" class=\"docClass\">Autolinker.htmlParser.HtmlParser</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The HtmlParser instance used to skip over HTML tags, while finding text nodes to process. ...</div><div class='long'><p>The HtmlParser instance used to skip over HTML tags, while finding text nodes to process. This is lazily instantiated\nin the <a href=\"#!/api/Autolinker-method-getHtmlParser\" rel=\"Autolinker-method-getHtmlParser\" class=\"docClass\">getHtmlParser</a> method.</p>\n</div></div></div><div id='property-matchParser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-property-matchParser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-property-matchParser' class='name expandable'>matchParser</a> : <a href=\"#!/api/Autolinker.matchParser.MatchParser\" rel=\"Autolinker.matchParser.MatchParser\" class=\"docClass\">Autolinker.matchParser.MatchParser</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The MatchParser instance used to find matches in the text nodes of an input string passed to\nlink. ...</div><div class='long'><p>The MatchParser instance used to find matches in the text nodes of an input string passed to\n<a href=\"#!/api/Autolinker-method-link\" rel=\"Autolinker-method-link\" class=\"docClass\">link</a>. This is lazily instantiated in the <a href=\"#!/api/Autolinker-method-getMatchParser\" rel=\"Autolinker-method-getMatchParser\" class=\"docClass\">getMatchParser</a> method.</p>\n</div></div></div><div id='property-tagBuilder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-property-tagBuilder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-property-tagBuilder' class='name expandable'>tagBuilder</a> : <a href=\"#!/api/Autolinker.AnchorTagBuilder\" rel=\"Autolinker.AnchorTagBuilder\" class=\"docClass\">Autolinker.AnchorTagBuilder</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The AnchorTagBuilder instance used to build match replacement anchor tags. ...</div><div class='long'><p>The AnchorTagBuilder instance used to build match replacement anchor tags. Note: this is lazily instantiated\nin the <a href=\"#!/api/Autolinker-method-getTagBuilder\" rel=\"Autolinker-method-getTagBuilder\" class=\"docClass\">getTagBuilder</a> method.</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Autolinker-method-constructor' class='name expandable'>Autolinker</a>( <span class='pre'>[cfg]</span> ) : <a href=\"#!/api/Autolinker\" rel=\"Autolinker\" class=\"docClass\">Autolinker</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cfg</span> : Object (optional)<div class='sub-desc'><p>The configuration options for the Autolinker instance, specified in an Object (map).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Autolinker\" rel=\"Autolinker\" class=\"docClass\">Autolinker</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createMatchReturnVal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-method-createMatchReturnVal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-method-createMatchReturnVal' class='name expandable'>createMatchReturnVal</a>( <span class='pre'>match</span> ) : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Creates the return string value for a given match in the input string,\nfor the linkifyStr method. ...</div><div class='long'><p>Creates the return string value for a given match in the input string,\nfor the <a href=\"#!/api/Autolinker-method-linkifyStr\" rel=\"Autolinker-method-linkifyStr\" class=\"docClass\">linkifyStr</a> method.</p>\n\n<p>This method handles the <a href=\"#!/api/Autolinker-cfg-replaceFn\" rel=\"Autolinker-cfg-replaceFn\" class=\"docClass\">replaceFn</a>, if one was provided.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>match</span> : <a href=\"#!/api/Autolinker.match.Match\" rel=\"Autolinker.match.Match\" class=\"docClass\">Autolinker.match.Match</a><div class='sub-desc'><p>The Match object that represents the match.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The string that the <code>match</code> should be replaced with. This is usually the anchor tag string, but\n  may be the <code>matchStr</code> itself if the match is not to be replaced.</p>\n</div></li></ul></div></div></div><div id='method-getHtmlParser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-method-getHtmlParser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-method-getHtmlParser' class='name expandable'>getHtmlParser</a>( <span class='pre'></span> ) : <a href=\"#!/api/Autolinker.htmlParser.HtmlParser\" rel=\"Autolinker.htmlParser.HtmlParser\" class=\"docClass\">Autolinker.htmlParser.HtmlParser</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Lazily instantiates and returns the htmlParser instance for this Autolinker instance. ...</div><div class='long'><p>Lazily instantiates and returns the <a href=\"#!/api/Autolinker-property-htmlParser\" rel=\"Autolinker-property-htmlParser\" class=\"docClass\">htmlParser</a> instance for this Autolinker instance.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Autolinker.htmlParser.HtmlParser\" rel=\"Autolinker.htmlParser.HtmlParser\" class=\"docClass\">Autolinker.htmlParser.HtmlParser</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getMatchParser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-method-getMatchParser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-method-getMatchParser' class='name expandable'>getMatchParser</a>( <span class='pre'></span> ) : <a href=\"#!/api/Autolinker.matchParser.MatchParser\" rel=\"Autolinker.matchParser.MatchParser\" class=\"docClass\">Autolinker.matchParser.MatchParser</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Lazily instantiates and returns the matchParser instance for this Autolinker instance. ...</div><div class='long'><p>Lazily instantiates and returns the <a href=\"#!/api/Autolinker-property-matchParser\" rel=\"Autolinker-property-matchParser\" class=\"docClass\">matchParser</a> instance for this Autolinker instance.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Autolinker.matchParser.MatchParser\" rel=\"Autolinker.matchParser.MatchParser\" class=\"docClass\">Autolinker.matchParser.MatchParser</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getTagBuilder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-method-getTagBuilder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-method-getTagBuilder' class='name expandable'>getTagBuilder</a>( <span class='pre'></span> ) : <a href=\"#!/api/Autolinker.AnchorTagBuilder\" rel=\"Autolinker.AnchorTagBuilder\" class=\"docClass\">Autolinker.AnchorTagBuilder</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the tagBuilder instance for this Autolinker instance, lazily instantiating it\nif it does not yet exist. ...</div><div class='long'><p>Returns the <a href=\"#!/api/Autolinker-property-tagBuilder\" rel=\"Autolinker-property-tagBuilder\" class=\"docClass\">tagBuilder</a> instance for this Autolinker instance, lazily instantiating it\nif it does not yet exist.</p>\n\n<p>This method may be used in a <a href=\"#!/api/Autolinker-cfg-replaceFn\" rel=\"Autolinker-cfg-replaceFn\" class=\"docClass\">replaceFn</a> to generate the <a href=\"#!/api/Autolinker.HtmlTag\" rel=\"Autolinker.HtmlTag\" class=\"docClass\">HtmlTag</a> instance that\nAutolinker would normally generate, and then allow for modifications before returning it. For example:</p>\n\n<pre><code>var html = <a href=\"#!/api/Autolinker-method-link\" rel=\"Autolinker-method-link\" class=\"docClass\">Autolinker.link</a>( \"Test google.com\", {\n    replaceFn : function( autolinker, match ) {\n        var tag = autolinker.getTagBuilder().build( match );  // returns an <a href=\"#!/api/Autolinker.HtmlTag\" rel=\"Autolinker.HtmlTag\" class=\"docClass\">Autolinker.HtmlTag</a> instance\n        tag.setAttr( 'rel', 'nofollow' );\n\n        return tag;\n    }\n} );\n\n// generated html:\n//   Test &lt;a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\"&gt;google.com&lt;/a&gt;\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Autolinker.AnchorTagBuilder\" rel=\"Autolinker.AnchorTagBuilder\" class=\"docClass\">Autolinker.AnchorTagBuilder</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-link' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-method-link' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-method-link' class='name expandable'>link</a>( <span class='pre'>textOrHtml</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Automatically links URLs, Email addresses, Phone numbers, Twitter\nhandles, and Hashtags found in the given chunk of H...</div><div class='long'><p>Automatically links URLs, Email addresses, Phone numbers, Twitter\nhandles, and Hashtags found in the given chunk of HTML. Does not link\nURLs found within HTML tags.</p>\n\n<p>For instance, if given the text: <code>You should go to http://www.yahoo.com</code>,\nthen the result will be <code>You should go to\n&amp;lt;a href=\"http://www.yahoo.com\"&amp;gt;http://www.yahoo.com&amp;lt;/a&amp;gt;</code></p>\n\n<p>This method finds the text around any HTML elements in the input\n<code>textOrHtml</code>, which will be the text that is processed. Any original HTML\nelements will be left as-is, as well as the text that is already wrapped\nin anchor (&lt;a&gt;) tags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>textOrHtml</span> : String<div class='sub-desc'><p>The HTML or text to autolink matches within\n  (depending on if the <a href=\"#!/api/Autolinker-cfg-urls\" rel=\"Autolinker-cfg-urls\" class=\"docClass\">urls</a>, <a href=\"#!/api/Autolinker-cfg-email\" rel=\"Autolinker-cfg-email\" class=\"docClass\">email</a>, <a href=\"#!/api/Autolinker-cfg-phone\" rel=\"Autolinker-cfg-phone\" class=\"docClass\">phone</a>,\n  <a href=\"#!/api/Autolinker-cfg-twitter\" rel=\"Autolinker-cfg-twitter\" class=\"docClass\">twitter</a>, and <a href=\"#!/api/Autolinker-cfg-hashtag\" rel=\"Autolinker-cfg-hashtag\" class=\"docClass\">hashtag</a> options are enabled).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The HTML, with matches automatically linked.</p>\n</div></li></ul></div></div></div><div id='method-linkifyStr' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-method-linkifyStr' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-method-linkifyStr' class='name expandable'>linkifyStr</a>( <span class='pre'>str</span> ) : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Process the text that lies in between HTML tags, performing the anchor\ntag replacements for the matches, and returns ...</div><div class='long'><p>Process the text that lies in between HTML tags, performing the anchor\ntag replacements for the matches, and returns the string with the\nreplacements made.</p>\n\n<p>This method does the actual wrapping of matches with anchor tags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>The string of text to auto-link.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The text with anchor tags auto-filled.</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-link' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker'>Autolinker</span><br/><a href='source/Autolinker.html#Autolinker-static-method-link' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker-static-method-link' class='name expandable'>link</a>( <span class='pre'>textOrHtml, [options]</span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,\nand Hashtags found in the given chunk of H...</div><div class='long'><p>Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,\nand Hashtags found in the given chunk of HTML. Does not link URLs found\nwithin HTML tags.</p>\n\n<p>For instance, if given the text: <code>You should go to http://www.yahoo.com</code>,\nthen the result will be <code>You should go to &amp;lt;a href=\"http://www.yahoo.com\"&amp;gt;http://www.yahoo.com&amp;lt;/a&amp;gt;</code></p>\n\n<p>Example:</p>\n\n<pre><code>var linkedText = <a href=\"#!/api/Autolinker-method-link\" rel=\"Autolinker-method-link\" class=\"docClass\">Autolinker.link</a>( \"Go to google.com\", { newWindow: false } );\n// Produces: \"Go to &lt;a href=\"http://google.com\"&gt;google.com&lt;/a&gt;\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>textOrHtml</span> : String<div class='sub-desc'><p>The HTML or text to find matches within (depending\n  on if the <a href=\"#!/api/Autolinker-cfg-urls\" rel=\"Autolinker-cfg-urls\" class=\"docClass\">urls</a>, <a href=\"#!/api/Autolinker-cfg-email\" rel=\"Autolinker-cfg-email\" class=\"docClass\">email</a>, <a href=\"#!/api/Autolinker-cfg-phone\" rel=\"Autolinker-cfg-phone\" class=\"docClass\">phone</a>, <a href=\"#!/api/Autolinker-cfg-twitter\" rel=\"Autolinker-cfg-twitter\" class=\"docClass\">twitter</a>,\n  and <a href=\"#!/api/Autolinker-cfg-hashtag\" rel=\"Autolinker-cfg-hashtag\" class=\"docClass\">hashtag</a> options are enabled).</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Any of the configuration options for the Autolinker\n  class, specified in an Object (map). See the class description for an\n  example call.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The HTML text, with matches automatically linked.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});